@page "/PieChart"


@* <DemoContainer>
        <ApexChart TItem="Order"
               Title="Order Gross Value">

            <ApexPointSeries TItem="Order"
                         Items="Orders"
                         Name="Gross Value"
                         SeriesType="SeriesType.Pie"
                         XValue="@(e => e.product_name)"
                         YAggregate="@(e => e.product_count)"
                         OrderByDescending="e=>e.Y" />
        </ApexChart>
    </DemoContainer>*@
<div class="container">
    <div class="row">
        <div class="col-sm-12 col-lg-6 offset-lg-3 my-5">
            <RadzenCard class="w-100 mb-4">
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                <RadzenLabel Text="Show Data Labels" For="dataLabels" Style="margin-left: 8px; vertical-align: middle;" />
            </RadzenCard>
            <RadzenChart SeriesClick=@OnSeriesClick>
                <RadzenPieSeries Data="@revenue" Title="Qty" CategoryProperty="product_name" ValueProperty="product_count">
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenPieSeries>
            </RadzenChart>
        </div>
    </div>
</div>
@code {
    //private TodaySaleProductList Orders = new();
    //protected override async Task OnInitializedAsync()
    //{
    //    Orders = await db.PieChart();
    //}


    bool showDataLabels = false; 
    DataItem[] revenue = new DataItem[] {
    };
    void OnSeriesClick(SeriesClickEventArgs args)
    {
    }
    protected override async Task OnInitializedAsync()
    {
        //var array = await db.PieChart();
        //DataItem[] revenue = new DataItem[array.Length];
        //for (int i = 0; i < array.Length; i++)
        //{
        //    revenue[i++] = new DataItem
        //        {
        //            product_name = array[i].product_name,
        //            product_count = array[i].product_count,
        //        };
        //}
         revenue = await DataArray();

    }
    class DataItem
    {
        public string product_name { get; set; }
        public int product_count { get; set; }
    }

    async Task<DataItem[]> DataArray()
    {
        var array = await db.PieChart();
        DataItem[] data = new DataItem[array.Length];
        int length = array.Length;
        for (int i = 0; i < length; i++)
        {
            data[i] = new DataItem
                {
                    product_name = array[i].product_name,
                    product_count = array[i].product_count,
                };
        }
        return data;
    }

   
}
