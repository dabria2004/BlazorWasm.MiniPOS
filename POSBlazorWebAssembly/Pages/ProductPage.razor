@page "/Product"
<div style="padding-left: 10px">
    <a class="btn btn-success mt-3" href="ProductCreate">Create</a>
</div>
<div class="col-sm-12">
    <table class="table" id="tbDataTable">
        <thead>
            <tr>
                <th scope="col">Action</th>
                <th scope="col">Product Id</th>
                <th scope="col">Product Name</th>
                <th scope="col">Product Code</th>
                <th scope="col">Product Category Code</th>
                <th scope="col">Product Sale Price</th>
                <th scope="col">Product Buying Price</th>
            </tr>
        </thead>
        <tbody>
            @if(Model.Count > 0)
            {
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <a class="btn btn-warning mt-3" @onclick = "()=> Edit(item)">Edit</a>
                            <a class="btn btn-warning mt-3" @onclick="()=> Delete(item)">Delete</a>
                        </td>
                        <th scope="row">@(item.product_id)</th>
                        <td>@(item.product_name)</td>
                        <td>@(item.product_code)</td>
                        <td>@(item.product_category_code)</td>
                        <td>@(item.product_sale_price)</td>
                        <td>@(item.product_buying_price)</td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>


@code {
    List<ProductCreationDataModel> Model = new();

    protected override async Task OnInitializedAsync()
    {
        var lst = await db.GetProductList();
        Model = lst;
    }

    void Edit(ProductCreationDataModel product)
    {
        nav.NavigateTo($"/ProductEdit/{product.product_id}");
    }

    async Task Delete(ProductCreationDataModel product)
    {
        await db.DeleteProduct(product.product_id);
        Model = await db.GetProductList();
    }
}
