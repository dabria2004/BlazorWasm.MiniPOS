@if (Model != null)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Action</th>
                <th>Name</th>
                <th>Price</th>
                <th>Qty</th>
                <th>Amount</th>
            </tr>
        </thead>
        <tbody id="tbodySale">
            @foreach (var item in Model.lstProductSale)
            {
                <tr>
                    <td>
                        <button type="button" class="btn btn-warning" @onclick="()=>Edit(item.product_sale_id)">Edit</button>
                        <button type="button" class="btn btn-warning" @onclick="()=>Delete(item.product_sale_id)">Delete</button>
                    </td>
                    <td>@item.product_name</td>
                    <td>@item.product_price.ToString("n2")</td>
                    <td>@item.product_qty</td>
                    <td>@item.product_total_price.ToString("n2")</td>
                </tr>
            }
        </tbody>
    </table>
    @if (Model != null)
    {
        <MudPagination SelectedChanged="PageChanged" ShowFirstButton="true" ShowLastButton="true" Count="Model.TotalPageNo" Class="mt-4" />
    }
}

@code {
    [Parameter]
    public ProductSaleResponseDataModel Model { get; set; }

    [Parameter]
    public EventCallback<Guid> OnDeleteProductSaleClick { get; set; }

    [Parameter]
    public EventCallback<Guid> OnEditProductSaleClick { get; set; }

    async Task PageChanged(int pageNo)
    {
        var result = await db.ProductSalePagination(pageNo, 5);
        Model = result;
    }

    async Task Delete(Guid guid)
    {
        await OnDeleteProductSaleClick.InvokeAsync(guid);
    }

    async Task Edit(Guid guid)
    {
        await OnEditProductSaleClick.InvokeAsync(guid);
    }
}
