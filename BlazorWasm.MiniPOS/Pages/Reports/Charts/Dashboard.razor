@page "/Dashboard"

<h3>BarChart</h3>
<div class="row">
    <div class="col-md-6">
        <div id="BasicColumnChart"></div>
    </div>
    <div class="col-md-6">
        <div id="ColumnChart"></div>
    </div>
    <div class="col-md-6">
        <div id="BarBasicChart"></div>
    </div>
    <div class="col-md-6">
        <div id="play-controls">
            <button id="play-pause-button" class="fa fa-play" title="play"></button>
            <input id="play-range" type="range" value="1960" min="1960" max="2018">
        </div>
        <div id="BarRaceChart"></div>
    </div>
    <div class="col-md-6">
        <div id="ColumnDrillDown"></div>
    </div>
    <div class="col-md-6">
        <div id="YearOverYear"></div>
    </div>
    <div class="col-md-6">
        <div id="PastFiveYear"></div>
    </div>
    <div class="col-md-6">
        <div id="PastSevenDays"></div>
    </div>
</div>
@code {

    private List<MonthlyTopFiveProductsOfCurrentYear> _topProductsData;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await db.GenerateYearOverYear();
            await db.GenerateDataByMonth();

            var testing = await db.PastSevenDays();
            var barBasicChartData = await db.QtyOfTopFiveProductsByYear();
            var data = await db.CurrentYearTopFiveProductsByMonth();
            var series = data != null ? data : new List<ProductInfo>();
            var result = await db.YearOverYearChart(DateTime.Now);
            var pastFiveYear = await db.PastFiveYear(DateTime.Now);
            // var pastFiveYear = await db.DonutChart();
            await JsRuntime.InvokeVoidAsync("basicColumnChart", series);
            await JsRuntime.InvokeVoidAsync("columnChart");
            await JsRuntime.InvokeVoidAsync("barBasicChart", 
                barBasicChartData.productNames, barBasicChartData.productInfos);
            await JsRuntime.InvokeVoidAsync("barRaceChart");
            await JsRuntime.InvokeVoidAsync("columnDrillDown");
            await JsRuntime.InvokeVoidAsync("yearOverYear");
            await JsRuntime.InvokeVoidAsync("pastFiveYear", pastFiveYear);
            await JsRuntime.InvokeVoidAsync("pastSevenDays", testing.days, testing.productInfos);
        }
    }
}
