@page "/Dashboard"

<h3>BarChart</h3>
<div class="row">
    <div class="col-md-6">
        <div id="BasicColumnChart"></div>
    </div>
    <div class="col-md-6">
        <div id="ColumnChart"></div>
    </div>
    <div class="col-md-6">
        <div id="BarBasicChart"></div>
    </div>
    <div class="col-md-6">
        <div id="play-controls">
            <button id="play-pause-button" class="fa fa-play" title="play"></button>
            <input id="play-range" type="range" value="1960" min="1960" max="2018">
        </div>
        <div id="BarRaceChart"></div>
    </div>
    <div class="col-md-6">
        <div id="ColumnDrillDown"></div>
    </div>
    <div class="col-md-6">
        <div id="YearOverYear"></div>
    </div>
    <div class="col-md-6">
        <div id="PastFiveYears"></div>
    </div>
</div>
@code {
    private YearOverYearReturnModel yearOverYear = new();
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            yearOverYear = await db.YearOverYearChart(DateTime.Now);
            await JsRuntime.InvokeVoidAsync("basicColumnChart", yearOverYear.Year,
            yearOverYear.YearData);
            await JsRuntime.InvokeVoidAsync("columnChart");
            await JsRuntime.InvokeVoidAsync("barBasicChart");
            await JsRuntime.InvokeVoidAsync("barRaceChart");
            await JsRuntime.InvokeVoidAsync("columnDrillDown");
            await JsRuntime.InvokeVoidAsync("yearOverYear",yearOverYear.Year,
            yearOverYear.YearData);
            await JsRuntime.InvokeVoidAsync("pastFiveYears");
        }
    }
}
